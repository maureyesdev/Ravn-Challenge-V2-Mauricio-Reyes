generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id         Int        @id @default(autoincrement())
  name       String
  price      Float
  image      String
  stock      Int
  categories Category[]
  isEnabled  Boolean    @map("is_enabled")
  createdAt  DateTime   @default(now()) @map("created_at")
  updatedAt  DateTime   @default(now()) @map("updated_at")

  @@map("products")
}

model Category {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")

  Product   Product? @relation(fields: [productId], references: [id])
  productId Int?

  @@map("categories")
}

// model CategoriesOnProducts {
//   id         Int      @id @default(autoincrement())
//   productId  Int      @map("product_id")
//   categoryId Int      @map("category_id")
//   product    Product  @relation(fields: [productId], references: [id])
//   category   Category @relation(fields: [categoryId], references: [id])

//   @@map("categories_on_products")
// }

model User {
  id        Int        @id @default(autoincrement())
  email     String     @unique
  password  String
  role      UserRole
  status    UserStatus
  createdAt DateTime   @default(now()) @map("created_at")
  updatedAt DateTime   @default(now()) @map("updated_at")

  @@map("users")
}

enum UserRole {
  Manager
  User
}

enum UserStatus {
  Active
  Inactive
  PendingVerification
}
